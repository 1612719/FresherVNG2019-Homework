package rockPaperScissors.controller;

import net.minidev.json.JSONObject;
import org.apache.commons.io.IOUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;
import rockPaperScissors.filter.JWTAuthenticationFilter;
import rockPaperScissors.model.*;
import rockPaperScissors.repository.GameRepository;
import rockPaperScissors.repository.TurnRepository;
import rockPaperScissors.repository.UserRepository;
import com.google.gson.Gson;


import java.io.BufferedInputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.*;

import redis.clients.jedis.Jedis;
import rockPaperScissors.service.TokenAuthenticationService;

import static org.springframework.web.bind.annotation.RequestMethod.GET;
import static org.springframework.web.bind.annotation.RequestMethod.POST;


@Controller    // This means that this class is a Controller
@RequestMapping(path="/gamerps") // This means URL's start with /demo (after Application path)
public class HTTPController extends MainController{
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;

    @Autowired
    private GameRepository gameRepository;

    @Autowired
    private TurnRepository turnRepository;


//    @RequestMapping(value = "/signup", method = POST)
//    @ResponseBody
//    public  ResponseEntity<String> addNewUser (@RequestParam(name="username") String username
//            , @RequestParam(name="password") String password) {
//
//        return addNewUser(username,password,userRepository);
//    }

    @RequestMapping(value = "/signup", method = POST)
    @ResponseBody
    public   ResponseEntity<String>  addNewUser (@RequestBody User user){
        return addNewUser(user.getUserName(),user.getUserPassword(),userRepository);

    }




    @RequestMapping(value = "/newgame", method = POST)
    @ResponseBody
    public ResponseEntity<String> createNewGame(){
        String userName = TokenAuthenticationService.getUsername();
//        String res = createNewGame(userName,userRepository,gameRepository);
        return  createNewGame(userName,userRepository,gameRepository);
    }



    @RequestMapping(value = "/play", method = POST)
    @ResponseBody
    public ResponseEntity<String> createNewTurn(@RequestParam  Integer idgame,@RequestParam Integer userstep){
        String userName = TokenAuthenticationService.getUsername();
        return (createNewTurn(idgame,userstep,userName,userRepository,gameRepository,turnRepository));

    }


    @RequestMapping(value = "/history", method = GET)
    @ResponseBody
    public ResponseEntity<List<Game>> getHistory(){
        String userName = TokenAuthenticationService.getUsername();
        return getHistory(userName,userRepository,gameRepository);
    }



    @RequestMapping(value = "/top100", method = GET)
    @ResponseBody
    public ResponseEntity<List<UserNameAndWinRate>>  getTop100(){
        String userName = TokenAuthenticationService.getUsername();
        return getTop100(userName,userRepository);

    }




}